@baseUrl = http://localhost:3001
@contentType = application/json
@randomEmail = {{$datetime iso8601}}_{{$randomInt 1000 9999}}@example.com

### 開発者向けエンドポイント

### データベースをリセット
POST {{baseUrl}}/develop/reset_db
Content-Type: {{contentType}}

### デモユーザーでログイン
POST {{baseUrl}}/develop/demo_user_login
Content-Type: {{contentType}}

### 認証関連エンドポイント

### ユーザー登録
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "name": "Alice",
  "email": "{{randomEmail}}",
  "password": "password"
}

### ユーザーログイン
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "alice@example.com",
  "password": "password"
}

### ユーザーログアウト
POST {{baseUrl}}/auth/logout
Content-Type: {{contentType}}

### me
GET {{baseUrl}}/auth/me
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### 管理者ログイン
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@example.com",
  "password": "password"
}

### ユーザー管理エンドポイント

### ユーザーを作成
POST {{baseUrl}}/users
Content-Type: {{contentType}}

{
  "name": "John Doe",
  "email": "{{randomEmail}}",
  "password": "password"
}

### ユーザー一覧を取得
GET {{baseUrl}}/users
Content-Type: {{contentType}}

### ユーザー詳細を取得
GET {{baseUrl}}/users/2
Content-Type: {{contentType}}

### ユーザー情報を変更
PUT {{baseUrl}}/users/4
Content-Type: {{contentType}}

{
  "name": "John Doe",
  "email": "{{randomEmail}}"
}

### ユーザー権限情報をAdminに変更
PUT {{baseUrl}}/users/2/admin
Content-Type: {{contentType}}

### ユーザー権限情報からAdminを外す
PUT {{baseUrl}}/users/2/admin/remove
Content-Type: {{contentType}}

### ユーザーavatar情報を変更
PUT {{baseUrl}}/users/2/avatar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="example.jpg"
Content-Type: image/jpeg

< ./backend/uploads/test.png
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### マイクロポスト一覧を取得
GET {{baseUrl}}/microposts
Content-Type: {{contentType}}

### フォロー関連エンドポイント

### ユーザーをフォローする
POST {{baseUrl}}/follow/13
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### ユーザーのフォローを解除する
DELETE {{baseUrl}}/follow/13
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### ユーザーのフォロワーリストを取得する
GET {{baseUrl}}/follow/followers/4
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### ユーザーがフォローしているユーザーリストを取得する
GET {{baseUrl}}/follow/following/4
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### 現在のユーザーが指定されたユーザーをフォローしているかどうかを確認する
GET {{baseUrl}}/follow/is-following/12
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### チーム関連エンドポイント

### チームを作成
POST {{baseUrl}}/teams
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

{
  "name": "New Team",
  "isPrivate": false
}

### チーム一覧を取得
GET {{baseUrl}}/teams
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### チーム詳細を取得
GET {{baseUrl}}/teams/1
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### チーム情報を更新
PUT {{baseUrl}}/teams/1
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

{
  "name": "Updated Team Name",
  "isPrivate": true
}

### チームのプライバシー設定を更新
PUT {{baseUrl}}/teams/1/privacy
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

{
  "isPrivate": true
}

### チームにメンバーを追加
POST {{baseUrl}}/teams/1/members
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

{
  "userId": 2
}

### チームからメンバーを削除
DELETE {{baseUrl}}/teams/1/members/2
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### チームを削除
DELETE {{baseUrl}}/teams/1
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### テストエンドポイント

### 公開テスト
GET {{baseUrl}}/test/public
Content-Type: {{contentType}}

### 保護されたテスト
GET {{baseUrl}}/test/protected
Content-Type: {{contentType}}

### プロフィールテスト（認証なし）
GET {{baseUrl}}/test/profile
Content-Type: {{contentType}}

### プロフィールテスト（Bearerトークン付き）
GET {{baseUrl}}/test/profile
Content-Type: {{contentType}}
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### 管理者テスト
GET {{baseUrl}}/test/admin
Content-Type: {{contentType}}
