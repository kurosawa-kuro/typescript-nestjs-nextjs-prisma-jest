// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  password      String
  isAdmin       Boolean     @default(false)
  avatarPath    String      @default("default_avatar.png")
  microposts    Micropost[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Micropost {
  id         Int                @id @default(autoincrement())
  userId     Int
  title      String
  imagePath  String?
  user       User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  categories MicropostCategory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id         Int                @id @default(autoincrement())
  title      String
  microposts MicropostCategory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MicropostCategory {
  micropostId Int
  categoryId  Int
  micropost   Micropost @relation(fields: [micropostId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([micropostId, categoryId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
